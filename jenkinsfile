pipeline {
    agent { label 'slave01' }

    environment {
        IMAGE_NAME = "hubdc.dso.local/gungun/python-prisma:20250604"
        CX_TOKEN   = credentials('cx_token')
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Fix Permissions on Workspace') {
            steps {
                // ให้ทุกคน (others) อ่าน เขียน และเข้าโฟลเดอร์ workspace ได้ (rwx)
                // เพื่อให้ container (appuser) สามารถเขียนไฟล์ เช่น debug_finding.csv ลงไปได้
                sh 'chmod -R o+rwx "$WORKSPACE"'
            }
        }

        stage('Run Python Script via docker run') {
            steps {
                script {
                    // ใช้ :Z เพื่อให้ SELinux relabel workspace ให้ container อ่าน/เขียนได้
                    sh '''
                        docker run --rm \
                          -v "$WORKSPACE":/app:Z \
                          -w /app \
                          ${IMAGE_NAME} \
                          python3 cxone_end_to_end.py \
                            --project-name "MFEC_end_to_end_scan" \
                            --tenant "nfr_westconth" \
                            --token "$CX_TOKEN" \
                            --region "anz" \
                            --scan-id "e3d1cb0e-440e-4f15-aace-4167b9be8232"
                    '''
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
    }
}
